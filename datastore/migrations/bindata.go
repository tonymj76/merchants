package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __000001_create_merchants_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\x4d\x2d\x4a\xce\x48\xcc\x2b\x29\x56\x70\x76\x0c\x76\x76\x74\x71\xb5\xe6\xe5\x82\x28\x8c\x0c\x70\x55\x28\xa9\x2c\x48\x45\x11\x28\xca\xcf\x01\x09\xe8\xea\x2a\x80\xc5\x3c\xfd\x5c\x5c\x23\x14\x72\xe3\x33\x53\x2a\x30\x44\x4b\x2b\xc0\xc2\x80\x00\x00\x00\xff\xff\x33\xa0\xcd\xba\x76\x00\x00\x00")

func _000001_create_merchants_down_sql() ([]byte, error) {
	return bindata_read(
		__000001_create_merchants_down_sql,
		"000001_create_merchants.down.sql",
	)
}

var __000001_create_merchants_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x4d\x73\xd3\x30\x10\x86\xef\x99\xc9\x7f\xd8\x5b\x92\x99\x1e\x0a\x0c\xa7\x9e\x94\xb0\x6d\x3d\x38\x72\xb0\x65\x20\x5c\x34\x4a\xbc\x6d\x3c\xd8\x92\x46\x1f\x74\xfa\xef\x19\xab\xd4\x49\x28\x53\x0e\x70\xf1\x87\xf4\xec\xb3\xfb\xee\xaa\x44\x26\x10\xf0\xab\x40\x5e\x65\x05\x07\x7b\xbf\x77\x8f\x36\x98\xab\xe9\x64\x3a\xf9\x75\x2b\xb6\x1b\x04\x67\x3a\x02\x56\x01\xf2\x7a\x0d\xf3\x99\x8f\x96\x9c\x54\x4d\xdf\xea\xd9\x05\xcc\xc6\x0f\x1f\x77\xc7\x53\xaf\x3a\x92\x96\x9c\x37\x7a\xb6\xb8\x3a\xf7\x85\x47\x7b\xea\xeb\xcd\xae\xed\x68\x28\x3a\x98\x3e\xbd\x1f\x8c\xfb\x9e\xaa\x4e\x27\x61\xcb\x1c\xa1\x27\xb7\x3f\x28\x1d\x3c\xcc\xa7\x13\x80\xb6\x81\x65\x76\x53\x61\x99\xb1\x1c\x78\x21\x80\xd7\x79\x0e\x9b\x32\x5b\xb3\x72\x0b\x1f\x71\x7b\x31\x50\x3a\xf6\x3b\x72\xd2\xdc\x49\xeb\x4c\x13\xf7\x01\x32\x2e\xf0\x06\xcb\x74\x3b\xa4\x93\x69\xa4\x94\x73\xb4\x7c\xc0\x6b\x56\xe7\x62\x0c\x38\xb0\xd4\xab\xb6\x83\xcf\xac\x5c\xdd\xb2\x72\xfe\xee\xf2\x72\x71\xe4\x6b\x9e\x7d\xaa\x31\x61\xf6\x60\x34\x8d\xd8\x9b\xf7\xaf\x50\x4f\x9d\xd3\xe3\x65\xe7\xe7\xcd\x0c\x74\xf4\xe4\xe4\x53\xde\x8c\x8b\x3f\x0a\x8f\x39\x4d\x0c\x1d\x9d\xc7\xdc\x45\xdf\x6a\xf2\x5e\x6a\xd5\x9f\xcc\x76\x1a\x21\x71\xad\x97\x3e\x7a\x4b\xba\xa1\x06\x96\x45\x91\x23\xe3\xe3\x44\xd7\x2c\xaf\xf0\x19\x4b\xcb\x90\x3f\xc8\xb5\x77\xed\xab\xac\x57\x5d\x18\x3b\xbe\xfd\xbd\xa1\x55\xde\x3f\x34\x67\x4b\x4d\xe7\x9d\xf2\x41\x76\xe6\xbe\xd5\x20\xb2\x35\x56\x82\xad\x37\xf0\x25\x13\xb7\xe9\x17\xbe\x15\x1c\x5f\xae\x6c\x55\x97\x25\x72\x21\xc7\x8a\xa4\xda\x3b\x52\x81\x1a\xa9\xc2\x3f\xab\xa2\x6d\xfe\x97\xaa\xa1\x8e\xfe\xa2\x9a\x4e\x16\x3f\x03\x00\x00\xff\xff\x4b\x13\xa5\xa9\xa7\x03\x00\x00")

func _000001_create_merchants_up_sql() ([]byte, error) {
	return bindata_read(
		__000001_create_merchants_up_sql,
		"000001_create_merchants.up.sql",
	)
}

var __000002_create_outlets_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\x2f\x2d\xc9\x49\x2d\x29\xb6\xe6\xe5\x82\x48\x47\x06\xb8\x2a\x94\x54\x16\xa4\x5a\x03\x02\x00\x00\xff\xff\xe3\xfd\xdc\xaa\x2e\x00\x00\x00")

func _000002_create_outlets_down_sql() ([]byte, error) {
	return bindata_read(
		__000002_create_outlets_down_sql,
		"000002_create_outlets.down.sql",
	)
}

var __000002_create_outlets_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xc1\x6e\xe2\x30\x10\x40\xef\x48\xfc\xc3\xdc\x48\xa4\x3d\xb0\x87\xfd\x00\x13\x26\x60\xad\x71\x90\x63\x5a\xd1\x4b\xe4\x62\xab\x58\x0d\x71\x94\x38\xad\xf8\xfb\x2a\x89\x64\x68\x2b\xe8\xa5\x17\x4b\x9e\xf7\x3c\xf6\x8c\x67\x3a\x49\x04\x12\x89\x20\xc9\x82\x21\xb8\xce\x97\xc6\xb7\x10\x4d\x27\x00\x56\xc3\x82\xae\x72\x14\x94\x30\xe0\x99\x04\xbe\x63\x0c\xb6\x82\x6e\x88\xd8\xc3\x7f\xdc\xff\xe9\xad\x93\x69\x0e\x47\x55\xf9\x62\xd4\x29\x97\xc1\x1d\x78\xd7\x9a\xe6\xc2\x86\x90\x39\x29\x5b\xc2\x03\x11\xc9\x9a\x88\xe8\xef\xbf\x79\x3c\x84\xeb\xa3\xab\xcc\x55\x38\x86\x25\xa6\x64\xc7\x24\xcc\x66\x17\xa1\xf0\xe7\xda\xc0\xb0\x84\x37\x05\xef\xdd\x35\xaf\xa3\x5b\x2a\x6f\x7d\xa7\x0d\x50\x2e\x71\x85\x22\x38\xf3\x11\xbb\xea\xe5\x1e\xaf\x5d\x6b\xbd\x75\xd5\x0d\x7c\xb0\xfe\xdc\x17\x75\x83\xba\xae\xf2\xcd\x1d\x41\x69\xdd\x7c\xaa\xff\x6b\xa5\xea\x4d\xd9\x52\x3d\x97\x06\x16\x59\xc6\x90\xf0\x20\xa4\x84\xe5\x38\xde\xd2\x18\xe5\x8d\x2e\x94\x07\x49\x37\x98\x4b\xb2\xd9\xc2\x23\x95\xeb\x61\x0b\x4f\x19\xc7\xef\x1d\x4a\x76\x42\x20\x97\x45\x38\x31\xfe\x51\xad\x7f\x2b\x95\x36\xa5\xf9\x21\xd5\xe0\xa5\x99\x40\xba\xe2\xfd\x18\x41\x74\x35\x43\x31\x08\x4c\x51\x20\x4f\x30\x0f\xb3\xd5\x46\x3d\xc8\xfa\x2e\x30\x94\x08\x09\xc9\x13\xb2\xc4\xe9\x24\xfe\x08\x00\x00\xff\xff\x3a\x19\x7e\x10\xc0\x02\x00\x00")

func _000002_create_outlets_up_sql() ([]byte, error) {
	return bindata_read(
		__000002_create_outlets_up_sql,
		"000002_create_outlets.up.sql",
	)
}

var __000003_add_index_merchant_email_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\xf0\xf4\x73\x71\x8d\x50\xc8\x4d\x2d\x4a\xce\x48\xcc\x2b\x89\x4f\xcd\x4d\xcc\xcc\x89\xcf\xcc\x4b\x49\xad\xb0\x06\x04\x00\x00\xff\xff\xb7\x0d\x46\xbc\x20\x00\x00\x00")

func _000003_add_index_merchant_email_down_sql() ([]byte, error) {
	return bindata_read(
		__000003_add_index_merchant_email_down_sql,
		"000003_add_index_merchant_email.down.sql",
	)
}

var __000003_add_index_merchant_email_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\xf5\xf3\x0c\x0c\x75\x55\xf0\xf4\x73\x71\x8d\x50\x70\xf6\xf7\x73\x0e\x0d\x0a\x72\xf5\x0b\xf1\x89\x54\xc8\x4d\x2d\x4a\xce\x48\xcc\x2b\x89\x4f\xcd\x4d\xcc\xcc\x89\xcf\xcc\x4b\x49\xad\x50\xf0\xf7\x83\x8b\x17\x2b\x68\x80\x65\x34\xad\x01\x01\x00\x00\xff\xff\xe3\xd8\x27\x2a\x4b\x00\x00\x00")

func _000003_add_index_merchant_email_up_sql() ([]byte, error) {
	return bindata_read(
		__000003_add_index_merchant_email_up_sql,
		"000003_add_index_merchant_email.up.sql",
	)
}

var __000004_create_terminals_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x49\x2d\xca\xcd\xcc\x4b\xcc\x29\xb6\xe6\x02\x04\x00\x00\xff\xff\x5d\xc3\x55\xe6\x20\x00\x00\x00")

func _000004_create_terminals_down_sql() ([]byte, error) {
	return bindata_read(
		__000004_create_terminals_down_sql,
		"000004_create_terminals.down.sql",
	)
}

var __000004_create_terminals_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x41\x4f\x83\x40\x14\x84\xef\xfc\x8a\x39\x42\xe2\x41\x0f\xfe\x80\xed\xf2\x68\x37\x2e\x4b\xf3\x78\x68\xea\x85\x90\xb2\x89\x4d\x00\x0d\xd0\xff\x6f\xb6\x8d\x58\x62\x8c\x17\x8f\x3b\x33\xfb\xbd\xc9\x68\x26\x25\x04\x51\x1b\x4b\x98\xfd\xd8\x9f\x86\xa6\x9b\x10\x47\xc0\xa9\xc5\xc6\x6c\x4b\x62\xa3\x2c\x5c\x21\x70\x95\xb5\xd8\xb3\xc9\x15\x1f\xf0\x44\x87\xbb\x08\xe8\xfd\x78\x7c\x6b\x86\xb9\xbe\xa6\x8d\x93\x25\x1a\xec\xf7\xf3\xdc\xf9\x1b\x33\x68\xe7\xc9\x8f\x6b\xe5\xeb\x6e\x3d\x34\xbd\xc7\xb3\x62\xbd\x53\x1c\x3f\x3c\xde\x27\x2b\xd8\x71\xf4\xcd\xec\xdb\xba\x99\x21\x26\xa7\x52\x54\xbe\xc7\x8b\x91\xdd\xe5\x89\xd7\xc2\xd1\x77\xcf\x94\x32\x55\x59\x81\xae\x98\xc9\x49\xbd\xfc\xb8\x54\xf8\x68\xff\x89\xd4\xfa\xce\xff\x41\x0a\xb1\xac\x60\x32\x5b\x17\x56\x43\x7c\xb3\x59\x02\xa6\x8c\x98\x9c\xa6\x72\xd9\x72\x8a\x83\x51\x38\xa4\x64\x49\x08\x5a\x95\x5a\xa5\x3f\x39\xcb\xb8\x2b\xca\x55\xfd\x85\x11\x25\x9f\x01\x00\x00\xff\xff\xb8\x0f\x8a\xed\xf1\x01\x00\x00")

func _000004_create_terminals_up_sql() ([]byte, error) {
	return bindata_read(
		__000004_create_terminals_up_sql,
		"000004_create_terminals.up.sql",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"000001_create_merchants.down.sql": _000001_create_merchants_down_sql,
	"000001_create_merchants.up.sql": _000001_create_merchants_up_sql,
	"000002_create_outlets.down.sql": _000002_create_outlets_down_sql,
	"000002_create_outlets.up.sql": _000002_create_outlets_up_sql,
	"000003_add_index_merchant_email.down.sql": _000003_add_index_merchant_email_down_sql,
	"000003_add_index_merchant_email.up.sql": _000003_add_index_merchant_email_up_sql,
	"000004_create_terminals.down.sql": _000004_create_terminals_down_sql,
	"000004_create_terminals.up.sql": _000004_create_terminals_up_sql,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"000001_create_merchants.down.sql": &_bintree_t{_000001_create_merchants_down_sql, map[string]*_bintree_t{
	}},
	"000001_create_merchants.up.sql": &_bintree_t{_000001_create_merchants_up_sql, map[string]*_bintree_t{
	}},
	"000002_create_outlets.down.sql": &_bintree_t{_000002_create_outlets_down_sql, map[string]*_bintree_t{
	}},
	"000002_create_outlets.up.sql": &_bintree_t{_000002_create_outlets_up_sql, map[string]*_bintree_t{
	}},
	"000003_add_index_merchant_email.down.sql": &_bintree_t{_000003_add_index_merchant_email_down_sql, map[string]*_bintree_t{
	}},
	"000003_add_index_merchant_email.up.sql": &_bintree_t{_000003_add_index_merchant_email_up_sql, map[string]*_bintree_t{
	}},
	"000004_create_terminals.down.sql": &_bintree_t{_000004_create_terminals_down_sql, map[string]*_bintree_t{
	}},
	"000004_create_terminals.up.sql": &_bintree_t{_000004_create_terminals_up_sql, map[string]*_bintree_t{
	}},
}}
